#############################################################
#
# Copyright 2015 F4E | European Joint Undertaking for ITER 
#  and the Development of Fusion Energy ('Fusion for Energy')
#
# Licensed under the EUPL, Version 1.1 or - as soon they 
# will be approved by the European Commission - subsequent  
# versions of the EUPL (the "Licence"); 
# You may not use this work except in compliance with the 
# Licence. 
# You may obtain a copy of the Licence at: 
#  
# http://ec.europa.eu/idabc/eupl
#
# Unless required by applicable law or agreed to in 
# writing, software distributed under the Licence is 
# distributed on an "AS IS" basis, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
# express or implied. 
# See the Licence for the specific language governing 
# permissions and limitations under the Licence. 
#
#############################################################
#!/bin/sh
# 1. Copy this file to /etc/init.d/
# 2. Change CODE_DIRECTORY and CONFIG_FILE_LOC to the correct locations
# 3. Run: /sbin/chkconfig --add FalconService
# 4. Check if everything is ok by running: /sbin/chkconfig --list | grep FalconService
# 5. Run: /sbin/chkconfig --level 3 FalconService on
# 6. Run: /sbin/chkconfig --level 5 FalconService on
# 7. Recheck everything by running: /sbin/chkconfig --list | grep FalconService
# DESCRIPTION
# 
# chkconfig: - 98 35
# description: Starts and stops the FalconService 

LOCK_FILE=/var/lock/falconlock
CODE_DIRECTORY=/home/aneto/Projects/Fast-Control-Falcon
CONFIG_FILE_LOC=$CODE_DIRECTORY/Configurations/Startup.cfg
SERVICE_LOC=$CODE_DIRECTORY/Build/linux/Startup/Main.ex

MARTe2_DIR=/home/aneto/Projects/MARTe2-dev
EFDA_MARTe_DIR=/home/aneto/Projects/EFDA-MARTe/trunk/
MARTe2_Components_DIR=/home/aneto/Projects/MARTe2-components/

FALCON_MDS_PATH="192.168.130.46:8020::/home/aneto/Projects/Fast-Control-Falcon/Configurations/Tree"

LD_LIBRARY_PATH=$LD_LIBRARY_PATH:.
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CODE_DIRECTORY/Build/linux/GAMs/FilterDownsamplingGAM/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CODE_DIRECTORY/Build/linux/GAMs/WaveformTestGAM/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CODE_DIRECTORY/Build/linux/GAMs/TriggerTestGAM/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CODE_DIRECTORY/Build/linux/GAMs/TriggerMaskGAM/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_DIR/Build/linux/Core/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/DataSources/LinuxTimer/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/DataSources/LoggerDataSource/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/DataSources/NI6259/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/DataSources/NI6368/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/DataSources/SDN/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/DataSources/UDP/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/DataSources/MDSWriter/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/GAMs/IOGAM/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/GAMs/BaseLib2GAM/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/GAMs/ConversionGAM/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/GAMs/FilterGAM/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/Interfaces/BaseLib2Wrapper/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_Components_DIR/Build/linux/Components/Interfaces/SysLogger/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$EFDA_MARTe_DIR/BaseLib2/linux/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$EFDA_MARTe_DIR/MARTe/MARTeSupportLib/linux/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$EFDA_MARTe_DIR/Interfaces/HTTP/CFGUploader/linux/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$EFDA_MARTe_DIR/Interfaces/HTTP/FlotPlot/linux/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$EFDA_MARTe_DIR/Interfaces/HTTP/MATLABHandler/linux/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$EFDA_MARTe_DIR/Interfaces/HTTP/SignalHandler/linux/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$EFDA_MARTe_DIR/GAMs/WaveformGenerator2009/linux/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$EFDA_MARTe_DIR/GAMs/WebStatisticGAM/linux/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$EFDA_MARTe_DIR/GAMs/PlottingGAM/linux/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$EFDA_MARTe_DIR/GAMs/DataCollectionGAM/linux/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$EFDA_MARTe_DIR/Interfaces/BaseLib2Adapter/linux/
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$SDN_CORE_LIBRARY_DIR

start() {
    if [ -f $LOCK_FILE ]; then
        echo $"Another instance of the Falcon Fast Controller already appears to be to running. If you sure that this isn't the case remove the lock file: /var/lock/falconlock and start the service again!"
        exit 1
    fi
    
    echo $"Starting Falcon Fast Controller"

    export mds_falconf_path=$FALCON_MDS_PATH
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH

    #Disable CPU speed changing
    service cpuspeed stop
    
    #Allocate dynamic ticks to CPU #0
    for i in `pgrep rcu[^c]` ; do taskset -pc 0 $i ; done

    #Assign IRQ to correct CPU
    tuna -q nixseries -c 3 -x -m

    #Isolate cpus 1-3 (tasks and interrupts)
    tuna -c 1-3 --isolate

    taskset 1 $SERVICE_LOC -f $CONFIG_FILE_LOC -m "StateMachine:START" & 
    echo $!> $LOCK_FILE
}

stop() {
    echo $"Shutting down Falcon Fast Controller"
    if [ -f $LOCK_FILE ]; then
        kill -TERM `cat $LOCK_FILE`
        rm -f $LOCK_FILE
    fi
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart|reload)
        stop
        sleep 20
        start
        ;;
  condrestart)
        ;;
  status)
        if [ -f $LOCK_FILE ]; then
        echo $"running..."
        else
        echo $"stopped..."
        fi
        ;;
  *)
        echo $"Usage: $0 {start|stop|restart|condrestart|status}"
        exit 1
esac

exit $RETVAL

