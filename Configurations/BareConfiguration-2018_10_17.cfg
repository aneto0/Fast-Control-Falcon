//As Test8 but with no debugging information and with no DAC
+EPICS_CA = {
    Class = EPICS::EPICSCAClient
	StackSize = 1048576
	CPUs = 0x2
    AutoStart = 0
	+PV_STATUS = {
		Class = EPICS::EPICSPV
		PVName = "TEST-AUX-FDAQ:Fast_Status"
		PVType = uint32
   	}    
	/*+PV_COMMAND = {
		Class = EPICS::EPICSPV
		PVName = "TEST-AUX-FDAQ:Fast_Status_CMD"
		PVType = uint32
		Event = {
    		Destination = StateMachine
    		PVValue = Function
    		FunctionMap = {{"1", "MAKEREADY"}, {"0", "GOOFFPULSE"}}
		}
   	}*/
	+PV_ERROR = {
		Class = EPICS::EPICSPV
		PVName = "TEST-AUX-FDAQ:Fast_Error"
		PVType = uint32
	}
	+PV_ERROR_RST = {
		Class = EPICS::EPICSPV
		PVName = "TEST-AUX-FDAQ:Fast_Error_Rst"
		PVType = uint32
		Event = {
    		Destination = StateMachine
    		PVValue = Ignore
    		Function = "ABORT" 
            //Function = GOONLINE //DEBUG ONLY
        }
	}
}
+LoggerService = {	
	Class = LoggerService
	CPUs = 0x2
	StackSize = 32768 
	NumberOfLogPages = 128 
    +ConLogger = {
		Class = ConsoleLogger
		Format = "EtOoFmC"
		PrintKeys = 1
	}
	+SysLogger = {
		Class = SysLogger
		Format = "EtOoFmC"
		PrintKeys = 1
		Ident = "Falcon"
	}
}
+AppSharedMemoryToFalconApp = {
	Class = MemoryGate
    NumberOfBuffers = 2 //The number of buffers that should be in [1-64]. Default = 2
    ResetMSecTimeout = 10 //The timeout in milliseconds used by the mutex to lock all the buffers to change the write operations counters in case of write overflow). Default is 0xFFFFFFFF.\n
}
+AppSharedMemoryToPLCAPP = {
	Class = MemoryGate
    NumberOfBuffers = 2 //The number of buffers that should be in [1-64]. Default = 2
    ResetMSecTimeout = 10 //The timeout in milliseconds used by the mutex to lock all the buffers to change the write operations counters in case of write overflow). Default is 0xFFFFFFFF.\n
}
+StateMachine = {
	Class = StateMachine
	+INITIAL = {
    	Class = ReferenceContainer    	
    	+START = {
    		Class = StateMachineEvent
    		NextState = "OFFPULSE"
			NextStateError = "OFFPULSE"
    		Timeout = 0
    		+StartCAClient = {
				Class = Message
 				Destination = "EPICS_CA"
    			Function = "Start"
         		Mode = ExpectsReply
			}
			+ChangeToOffpulseMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Offpulse
        		}
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
        	+ChangeToIdlePLCSDNAppMsg = {
        		Class = Message
        		Destination = PLCSDNApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Idle
        		}
        	}
        	+StartNextStateExecutionPLCSDNAppMsg = {
        		Class = Message
        		Destination = PLCSDNApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
    	}    	
	}
	+OFFPULSE = {
    	Class = ReferenceContainer
    	+ENTER = {
            Class = ReferenceContainer   
    		+InformPLCOfNewStateMsg = {
        		Class = Message
        		Destination = PLCSDNApp.Functions.GAMMARTeState
        		Mode = ExpectsReply
        		Function = SetOutput
        		+Parameters = {
        			Class = ConfigurationDatabase
        			SignalIndex = 0
        			SignalValue = 185
        		}
        	}
    	}
    	+MAKEREADY = {
    		Class = StateMachineEvent
    		NextState = "READY"
    		NextStateError = "FAULT"
            Timeout = 0                        
        	+OpenTreeMsg = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriter"
        		Function = OpenTree
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
        	}
        	+OpenTreeSlowMsg = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriterSlow"
        		Function = OpenTree
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
        	}
        	+OpenTreeEventMsg = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriterEventTrigger"
        		Function = OpenTree
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
        	}         
            +PrepareChangeToReadyMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Ready
        		}
        	}
        	+StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
        }
        +GOOFFPULSE = {
            Class = StateMachineEvent
            NextState = "OFFPULSE"
            NextStateError = "OFFPULSE"
        }
        +FAULT = {
    		Class = StateMachineEvent
    		NextState = "FAULT"
    		NextStateError = "FAULT"
        }
    }
    +READY = {
    	Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +InformPLCOfNewStateMsg = {
        		Class = Message
        		Destination = PLCSDNApp.Functions.GAMMARTeState
        		Mode = ExpectsReply
        		Function = SetOutput
        		+Parameters = {
        			Class = ConfigurationDatabase
        			SignalIndex = 0
        			SignalValue = 140
        		}
        	}
        }
    	+FAULT = {
    		Class = StateMachineEvent
    		NextState = "FAULT"
    		NextStateError = "FAULT"
        } 
    	+GOONLINE = {
    		Class = StateMachineEvent
    		NextState = "ONLINE"
    		NextStateError = "FAULT"
            Timeout = 0                                	
        	+StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}        	
        	+PrepareChangeToOffpulseMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Online
        		}
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
        }
        +GOOFFPULSE = {
    		Class = StateMachineEvent
    		NextState = "OFFPULSE"
    		NextStateError = "FAULT"
            Timeout = 0                                	
        	+StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
        	+MessageFlush = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriter"
        		Function = FlushSegments
        		Mode = ExpectsReply
        	}
        	+MessageFlushSlow = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriterSlow"
        		Function = FlushSegments
        		Mode = ExpectsReply
        	}
           	+MessageFlushEventTrigger = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriterEventTrigger"
        		Function = FlushSegments
        		Mode = ExpectsReply
        	}         
        	+PrepareChangeToOffpulseMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Offpulse
        		}
        	}
            +SetStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_STATUS"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            } 
            +SetErrorStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_ERROR"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            } 
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
        }
        +MAKEREADY = {
            Class = StateMachineEvent
            NextState = "READY"
            NextStateError = "READY"
        }
	}
	+ONLINE = {
    	Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +SetStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_STATUS"
        		Function = CAPut
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 1
        		}
            } 
            +InformPLCOfNewStateMsg = {
        		Class = Message
        		Destination = PLCSDNApp.Functions.GAMMARTeState
        		Mode = ExpectsReply
        		Function = SetOutput
        		+Parameters = {
        			Class = ConfigurationDatabase
        			SignalIndex = 0
        			SignalValue = 225
        		}
        	}
        }
    	+FAULT = {
    		Class = StateMachineEvent
    		NextState = "FAULT"
    		NextStateError = "FAULT"
        } 
    	+GOOFFPULSE = {
    		Class = StateMachineEvent
    		NextState = "OFFPULSE"
    		NextStateError = "FAULT"
            Timeout = 0                                	
        	+StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
        	+MessageFlush = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriter"
        		Function = FlushSegments
        		Mode = ExpectsReply
        	}
        	+MessageFlushSlow = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriterSlow"
        		Function = FlushSegments
        		Mode = ExpectsReply
        	}
        	+MessageFlushEventTrigger = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriterEventTrigger"
        		Function = FlushSegments
        		Mode = ExpectsReply
        	}
        	+PrepareChangeToOffpulseMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Offpulse
        		}
        	}
            +SetStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_STATUS"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            } 
            +SetErrorStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_ERROR"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            } 
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
        }
        +GONLINE = {
            Class = StateMachineEvent
            NextState = "ONLINE"
            NextStateError = "ONLINE"
        }
	}
    +FAULT = {
    	Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
        	+PrepareChangeToFaultMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Fault
        		}
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
            +SetStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_STATUS"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            } 
            +SetErrorPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_ERROR"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 1
        		}
            } 
    		+InformPLCOfNewStateMsg = {
        		Class = Message
        		Destination = PLCSDNApp.Functions.GAMMARTeState
        		Mode = ExpectsReply
        		Function = SetOutput
        		+Parameters = {
        			Class = ConfigurationDatabase
        			SignalIndex = 0
        			SignalValue = 211
        		}
        	}    	
        }
    	+GOOFFPULSE = {
    		Class = StateMachineEvent
    		NextState = "OFFPULSE"
    		NextStateError = "OFFPULSE"
            Timeout = 0                                	
        	+StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
            +ResetErrorPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_ERROR"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            }
        	+PrepareChangeToOffpulseMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Offpulse
        		}
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
            +SetErrorStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_ERROR"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            } 
        }
    	+MAKEREADY = {
    		Class = StateMachineEvent
    		NextState = "FAULT"
    		NextStateError = "FAULT"
        }
    	+STOP = {
    		Class = StateMachineEvent
    		NextState = "FAULT"
    		NextStateError = "FAULT"
        }
    	+FAULT = {
    		Class = StateMachineEvent
    		NextState = "FAULT"
    		NextStateError = "FAULT"
        }

	}
}
$FalconApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMADC = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = NI6368_0
                    Type = uint32
                }
                RawTime = {
                    DataSource = NI6368_0
                    Type = uint32
                }
                ADC0_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
                    Frequency = 1000
                }
                ADC1_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC2_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC3_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC4_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC5_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC6_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC7_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC8_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC9_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC10_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC11_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC12_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC13_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC14_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC15_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}		
				Offpulse_Thread1_CycleTime = {                	
                	DataSource = Timings
                	Alias = "Offpulse.Thread1_CycleTime"
                	Type = uint32         	
                }
                Online_Thread1_CycleTime = {                	
                	DataSource = Timings
                	Alias = "Online.Thread1_CycleTime"
                	Type = uint32         	
                }				
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
                RawTime = {
                    DataSource = DDB1
                    Type = uint32                   
                }
                ADC0_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000     
					NumberOfDimensions = 1       	
                }  
                ADC1_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1            	
                }
                ADC2_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC3_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC4_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC5_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC6_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC7_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC8_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC9_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC10_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC11_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC12_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC13_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC14_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC15_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}		
				Offpulse_Thread1_CycleTime = {                	
                	DataSource = DDB1                	
                	Type = uint32         	
                }	
                Online_Thread1_CycleTime = {                	
                	DataSource = DDB1
                	Type = uint32         	
                }				                
            }
        }
        +GAMFilterDownsampling = {
            Class = FilterDownsamplingGAM
            SamplingFrequency = 2000000
            CutOffFrequency = 200
            InputSignals = {
                ADC0_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
                }
                ADC1_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC2_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC3_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC4_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC5_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC6_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC7_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC8_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC9_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC10_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC11_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC12_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC13_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC14_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC15_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}					
            }
            OutputSignals = {                
                ADC0_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1     
					NumberOfDimensions = 1
					Gain = 3.15e-04
                }  
                ADC1_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1   
					Gain = 3.15e-04         	
                }
                ADC2_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC3_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC4_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC5_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC6_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC7_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC8_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC9_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC10_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC11_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC12_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC13_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC14_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
				ADC15_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 3.15e-04
				}
            }
        } 
        +GAMTRMask = {
        	Class = TriggerMaskGAM
        	Mask = 0x1
        	InputSignals = {
        		PORT0 = {
                    DataSource = DDB1
                    Type = uint32
                }
			}
			OutputSignals = {
				RawTrigger = {
					DataSource = DDB1										
                    Type = uint8
				}
			}
        }
        +GAMTC = {
            Class = TimeCorrectionGAM
        	AssertCycles = 3
        	//AssertCycles = 1 //DEBUG ONLY
            Threshold = 1000
            //Threshold = 1 //DEBUG ONLY
            SignalPeriod = 500e-9
        	InputSignals = {
                ADC0_0 = {
                    DataSource = DDB1
					NumberOfElements = 2000     
					NumberOfDimensions = 1
                    Type = int16
                }
				RawTrigger = {
					DataSource = DDB1										
                    Type = uint8
				}
			}
			OutputSignals = {
        		Time = {
                    DataSource = DDB1
                    Type = uint32
                }
				Trigger = {
					DataSource = DDB1										
                    Type = uint8
				}
				TriggerSlow = {
					DataSource = DDB1										
                    Type = uint8
				}
			}
        }
        +GAMRTSM = {
            Class = RealTimeStateMachineGAM
			Offline = 120 //Code which describes the Offline State
			OnlineOff = 240 //Code which describes the Online-off State
			Online = 225 //Code which describes the Online State
			Change = 195 //Code which describes the Change State
			End = 135 //Code which describes the End State
			Paused = 210 // Code which describes the Paused State

			OnlineMainStateMachine = "Online" 

			SDNRTStart = 1 //Code which describes the SDN RT START event
			SDNRTStop = 0 //Code which describes the SDN RT STOP event

			SDNPowerOn = 1 //Code which describes the power on command

			CRIOPulseStart = 2 //The value to write in the DIO in order trigger the pulse start
			PowerSupplyTrigger = 4 //The value to write in the DIO in order trigger the power supply write
			
			InputSignals = {			
				ESDNEvent = {//The event received from the SDN (ECPC master)
					DataSource = DDB1
					Type = uint8 //The type shall be uint8
				}
				ESDNPowerCommand = {//The power command received from the SDN (ECPC master)
                	DataSource = DDB1
                	Type = uint8 //The type shall be uint8
           		}
			}
			OutputSignals = {
		        RTState = {//The current state encoded as described above.
					DataSource = DDB1 
					Type = uint8 //The type shall be uint8
		        }
				PORT0 = { //Outputs zero, the value of CRIOPulseStart or the value of (CRIOPulseStart | PowerSupplyTrigger)
 	              	DataSource = NI6368_DIO_0
 	              	//DataSource = LoggerDataSource
 	                Type = uint32 //The type shall be uint32
 	                Trigger = 1
				}
			}        	
        }
        +GAMMDS = {
        	Class = IOGAM
            InputSignals = {
            	Trigger = {
            		DataSource = DDB1
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
            	Time = {
                	DataSource = DDB1
                	NumberOfElements = 1
					NumberOfDimensions = 1
                }
                ADC0_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
                }
                ADC1_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC2_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC3_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC4_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC5_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC6_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC7_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC8_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC9_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC10_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC11_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC12_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC13_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC14_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC15_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}				
            }
            OutputSignals = {
            	Trigger = {
            		DataSource = MDSWriter
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
            	Time = {
                	DataSource = MDSWriter
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                }
                ADC0F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000     
					NumberOfDimensions = 1       	
                }  
                ADC1F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1            	
                }
                ADC2F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC3F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC4F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC5F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC6F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC7F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC8F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC9F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC10F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC11F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC12F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC13F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC14F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC15F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}					
            }
        }
        +GAMMDSSlow = {
        	Class = IOGAM
            InputSignals = {
                TriggerSlow = {
            		DataSource = DDB1
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Time = {
                	DataSource = DDB1
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                }
				PORT0 = {
                    DataSource = DDB1
                    Type = uint32
                    NumberOfElements = 1
					NumberOfDimensions = 1
                }                
				Counter = {
                	DataSource = DDB1
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                }
                ADC0_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC1_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC2_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC3_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC4_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC5_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC6_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC7_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC8_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC9_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC10_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC11_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC12_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC13_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC14_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC15_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                Online_Thread1_CycleTime = {                	
                	DataSource = DDB1
                	Type = uint32         	
                }				                
            }
            OutputSignals = {
                TriggerSlow = {
            		DataSource = MDSWriterSlow
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Time = {
                	DataSource = MDSWriterSlow
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                }
				PORT0 = {
                    DataSource = MDSWriterSlow
                    Type = uint32
                    NumberOfElements = 1
					NumberOfDimensions = 1
                }                
				Counter = {
                	DataSource = MDSWriterSlow
                	Type = uint32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC0S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC1S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC2S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC3S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC4S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC5S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC6S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC7S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC8S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC9S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC10S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC11S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC12S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC13S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC14S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }        
				ADC15S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }      
                Online_Thread1_CycleTime = {                	
                	DataSource = MDSWriterSlow
                	Type = uint32         	
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }				                

            }
        }
        +GAMDI = {
            Class = IOGAM
            InputSignals = {
                PORT0 = {
                    DataSource = NI6368_DIO_0
                    Type = uint32
                }
            }
            OutputSignals = {
                PORT0 = {
                    DataSource = DDB1
                    Type = uint32
                }                
            }
	    }
        +GAMSDNPub= {
        	Class = IOGAM
            InputSignals = {
                TriggerSlow = {
            		DataSource = DDB1
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Time = {
                	DataSource = DDB1
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                }
            }
            OutputSignals = {
                TriggerSlow = {
            		DataSource = SDNPub
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Time = {
                	DataSource = SDNPub
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                    Trigger = 1
                }
            }
        }
		+GAMIP = {
        	Class = IOGAM
        	InputSignals = {
        	     PLCState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LinkInputDataSource
                }
        	}
        	OutputSignals = {
        	     PLCState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
        	}
        }
		+GAMIPB = {
        	Class = IOGAM
        	InputSignals = {
        	     RTState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
        	}
        	OutputSignals = {
        	     RTState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LinkOutputDataSource
                }
        	}
        }
		+GAMESDNEMU = {
			Class = ESDNCommandEmuGAM
			PowerDelayTime = 100000 //Compulsory. Delay in micro-seconds before putting power on the ESDNCommand.
			Offline = 120 //The ID which identifies the offline state
			OnlineOff = 240 //Code which describes the Online-off State
			RTStartEvent = 1 //ID which identifies the RT_START event.
			RTStopEvent = 0 //ID which identifies the RT_STOP event.
			RTStopTime = 3600000000 //Time in micro-seconds at which to stop the pulse.
			//RTStopTime = 10000000 //Time in micro-seconds at which to stop the pulse.
			PowerOnCommand = 1 //ID which identifies the Power ON command.
			PowerOffCommand = 0 //ID which identifies the Power OFF command.
			InputSignals = {
				Time = {
                	DataSource = DDB1
 	             	Type = uint32 
 		        }
 		        TriggerSlow = {
					DataSource = DDB1										
                    Type = uint8
				}
 		        RTState = {
   					DataSource = DDB1
					Type = uint8
				}
				PulseDurationMilliSeconds = {
					DataSource = EPICSCAInput
					Type = uint32
				}
				PulseDurationSeconds = {
  					DataSource = EPICSCAInput
		            Type = uint32
				}
				PulseDurationMinutes = {
                	DataSource = EPICSCAInput
                	Type = uint32
          		}
          		SelectedGyrotron = {
          			DataSource = EPICSCAInput
                	Type = uint32
          		}
          		SelectedMode = {
          			DataSource = EPICSCAInput
                	Type = uint32
          		}
      		}
 			OutputSignals = {
           		ESDNEvent = {
                	DataSource = DDB1
                	Type = uint8 
           		}
          		ESDNPowerCommand = { 
              		DataSource = DDB1
					Type = uint8 //The type shall be uint8
				}
			}
		}
		+GAMDebug = {
        	Class = IOGAM
        	InputSignals = {
                Time = {
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                ADC0_0 = {
                	Type = int16
					NumberOfElements = 2000
					Ranges = {{0, 0}}    
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                Trigger = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
            }
            OutputSignals = {
                Time = {
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
                ADC0_0 = {
                	Type = int16
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
                Trigger = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
            }
        }
        +GAMCRIORead = {
            Class = IOGAM
            InputSignals = {
				DataOK = {
                    DataSource = CRIOUART
                    Type = uint8
                }
                Packet = {
                    DataSource = CRIOUART
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 15
                }
            }
            OutputSignals = {
				DataOK = {
                    DataSource = DDB2
                    Type = uint8
                }
                Packet = {
                    DataSource = DDB2
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 15
                }
            }
        }
        +GAMPacket = {
        	Class = PacketGAM
                InputSignals = {
                DataOK = {
                    DataSource = DDB2
                    Type = uint8
                }
                Packet = {
                    DataSource = DDB2
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 15
                }
            }
            OutputSignals = {
            	TIME = {
            		DataSource = MDSWriterEventTrigger
                    Type = uint64
            	}
                START_HVPS = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
				MODULATE = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }                
                RESET_HVPS = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                EU_ARC = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                RU_ARC = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PLC_TRIP_1 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PLC_TRIP_2 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                START_TIME = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                CRITICAL_ERR = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                ADMIN_MODE = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                MODE_LOSS = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                STRAY_1 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                STRAY_2 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                RESET_FPGA = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_EU_ARC = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_RU_ARC = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_PLC_TRIP_1 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_PLC_TRIP_2 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_MODE_LOSS = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_STRAY_1 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_STRAY_2 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_L_EU_ARC = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_L_RU_ARC = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_L_PLC_TRIP_1 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_L_PLC_TRIP_2 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_L_MODE_LOSS = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_L_STRAY_1 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_L_STRAY_2 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_B_EU_ARC = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_B_RU_ARC = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_B_PLC_TRIP_1 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_B_PLC_TRIP_2 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_B_MODE_LOSS = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_B_STRAY_1 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                PRE_PROC_OUT_B_STRAY_2 = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                ADHOC_TRIP_OUT = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                OUT_FLS = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                HVPS_OUT_TRIP_OUT = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                HVPS_OUT_ON_MPS = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                HVPS_OUT_ON_BPS = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                HVPS_STATE_OUT = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                OUT_IF_TRIP_PLC = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                OUT_IF_TRIP_MPS = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                OUT_IF_TRIP_BPS = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                FLS_MANAGER_STATE_OUT = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                ERROR_CODE_VALUE = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                LOGIC_MODE_VALUE = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }                
                DEBUG_PACKET_COUNTER = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                DEBUG_SYNCH_BYTE = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                DEBUG_CRC = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint16
                }
                TRIGGER = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                MARTE_ERROR_CODE = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                }
                ORIGINAL_PACKET = {
                    DataSource = MDSWriterEventTrigger
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 15
                }
            }
        } 
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
        	Class = GAMDataSource
       	}        
        +DDB2 = {
        	Class = GAMDataSource
       	}        
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +NI6368_0 = {
            Class = NI6368::NI6368ADC
            DeviceName = "/dev/pxie-6368"
            BoardId = 0
			DMABufferSize = 1000
            //ClockSampleSource = "PFI0"
            ClockSampleSource = "INTERNALTIMING"
            ClockSamplePolarity = "ACTIVE_HIGH_OR_RISING_EDGE"
            ClockConvertSource = "INTERNALTIMING"
			ClockConvertPolarity = "ACTIVE_HIGH_OR_RISING_EDGE"
			ScanIntervalCounterSource = "COUNTER_TB3"
			ScanIntervalCounterPolarity = "RISING_EDGE"
			ScanIntervalCounterPeriod = 50
			ScanIntervalCounterDelay = 2 
			CPUs = 0x8
			RealTimeMode = 1
            Signals = {
            	Counter = {
            		Type = uint32
            	}
                RawTime = {
                	Type = uint32
            	}
            	ADC0_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 0
            	}
            	ADC1_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 1          
            	}
            	ADC2_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 2          
            	}
            	ADC3_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 3          
            	}
            	ADC4_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 4          
            	}
            	ADC5_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 5          
            	}
            	ADC6_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 6          
            	}
            	ADC7_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 7          
            	}
            	ADC8_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 8          
            	}
            	ADC9_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 9          
            	}
            	ADC10_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 10          
            	}
            	ADC11_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 11          
            	}
            	ADC12_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 12     
            	}
            	ADC13_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 13          
            	}
            	ADC14_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 14         
            	}
            	ADC15_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 15          
            	}            	  
            }
        }
        +NI6368_DIO_0 = {
        	Class = NI6368::NI6368DIO
        	DeviceName = "/dev/pxie-6368"
        	BoardId = 0
        	InputPortMask = 0x1
        	OutputPortMask = 0x6
        	ClockSampleSource = "INTERNAL"
        	ClockSamplePolarity = "ACTIVE_HIGH_OR_RISING_EDGE"
        	ScanIntervalCounterSource = "COUNTER_TB3"
        	ScanIntervalCounterPeriod = 50
        	ScanIntervalCounterDelay = 2
        	StartTriggerSource = "SW_PULSE"
        	UpdateCounterSource = "UI_TC"
        	UpdateCounterPolarity = "RISING_EDGE"
        	UpdateIntervalCounterSource = "TB3"
        	UpdateIntervalCounterPolarity = "RISING_EDGE"
        	UpdateIntervalCounterPeriodDivisor = 100000
			UpdateIntervalCounterDelay = 2
        	Signals = {
        		PORT0 = {
        			Type = uint32
        		}
        	}
        }
        +MDSWriter = {
        	Class = MDSWriter::MDSWriter
			NumberOfBuffers = 60000
        	CPUMask = 0x10
        	StackSize = 10000000
        	TreeName = "falcon_fast"
        	StoreOnTrigger = 1
        	EventName = "updatejScope"
        	TimeRefresh = 5
        	NumberOfPreTriggers = 100
			NumberOfPostTriggers = 100
			Signals = {
				Trigger = {
					SignalType = uint8
				}
				Time = {
					SignalType = uint32
					TimeSignal = 1
				}
				ADC0F = {
        			NodeName = "ADC0.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC0.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC1F = {
        			NodeName = "ADC1.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC1.FSTD"
        			MinMaxResampleFactor = 1000
        			AutomaticSegmentation = 0 
        		}
        		ADC2F = {
        			NodeName = "ADC2.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC2.FSTD"
        			MinMaxResampleFactor = 1000
        			AutomaticSegmentation = 0 
        		}
        		ADC3F = {
        			NodeName = "ADC3.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC3.FSTD"
        			MinMaxResampleFactor = 1000
        			AutomaticSegmentation = 0 
        		}
        		ADC4F = {
        			NodeName = "ADC4.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC4.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC5F = {
        			NodeName = "ADC5.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC5.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC6F = {
        			NodeName = "ADC6.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC6.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC7F = {
        			NodeName = "ADC7.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC7.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC8F = {
        			NodeName = "ADC8.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC8.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC9F = {
        			NodeName = "ADC9.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC9.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC10F = {
        			NodeName = "ADC10.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC10.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC11F = {
        			NodeName = "ADC11.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC11.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC12F = {
        			NodeName = "ADC12.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC12.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC13F = {
        			NodeName = "ADC13.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC13.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC14F = {
        			NodeName = "ADC14.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC14.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}
        		ADC15F = {
        			NodeName = "ADC15.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 40
        			DecimatedNodeName = "ADC15.FSTD"
        			MinMaxResampleFactor = 1000 
        			AutomaticSegmentation = 0
        		}        				       
        	}
            +Messages = {
                Class = ReferenceContainer
                +TreeRuntimeError = {
                    Class = Message
                    Destination = StateMachine
                    Function = "FAULT"
                    Mode = ExpectsReply
                }

            }
        }
        +MDSWriterSlow = {
        	Class = MDSWriter::MDSWriter
			NumberOfBuffers = 120000
        	CPUMask = 0x10
        	StackSize = 10000000
        	TreeName = "falcon_fast"
        	StoreOnTrigger = 1
        	EventName = "updatejScope"
        	NumberOfPreTriggers = 0
			NumberOfPostTriggers = 0
        	TimeRefresh = 5
			Signals = {
				TriggerSlow = {
					SignalType = uint8
				}
				Time = {
					SignalType = uint32
					TimeSignal = 1
					NodeName = TIME
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "TIMED"
        			MinMaxResampleFactor = 10
        			SamplePhase = 1
        			AutomaticSegmentation = 0
				}
				PORT0 = {
        			NodeName = PORT0
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "PORT0D"
        			MinMaxResampleFactor = 10
        			SamplePhase = 1
        			AutomaticSegmentation = 0
        		}
        		Counter = {
        			NodeName = COUNTER
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "COUNTERD"
        			MinMaxResampleFactor = 10
        			SamplePhase = 1
        			AutomaticSegmentation = 0
        		}
        		ADC0S = {
        			NodeName = "ADC0.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1 //Notice that the filter actually outputs the data related to the computation of 2000 samples which were already acquired and thus the output time is delay by 1ms 
        			DecimatedNodeName = "ADC0.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC1S = {
        			NodeName = "ADC1.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC1.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC2S = {
        			NodeName = "ADC2.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC2.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC3S = {
        			NodeName = "ADC3.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC3.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC4S = {
        			NodeName = "ADC4.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC4.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC5S = {
        			NodeName = "ADC5.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC5.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC6S = {
        			NodeName = "ADC6.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC6.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC7S = {
        			NodeName = "ADC7.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC7.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC8S = {
        			NodeName = "ADC8.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC8.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC9S = {
        			NodeName = "ADC9.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC9.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC10S = {
        			NodeName = "ADC10.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC10.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC11S = {
        			NodeName = "ADC11.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC11.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC12S = {
        			NodeName = "ADC12.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC12.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC13S = {
        			NodeName = "ADC13.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC13.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC14S = {
        			NodeName = "ADC14.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC14.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        		ADC15S = {
        			NodeName = "ADC15.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC15.SLWD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
                Online_Thread1_CycleTime = {
        			NodeName = "DEBUG.CYCLET"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "DEBUG.CYCLETD"
        			MinMaxResampleFactor = 10
        			AutomaticSegmentation = 0
        		}
        	}
            +Messages = {
                Class = ReferenceContainer
                +TreeRuntimeError = {
                    Class = Message
                    Destination = StateMachine
                    Function = "FAULT"
                    Mode = ExpectsReply
                }
            }
        }
        +MDSWriterEventTrigger = {
        	Class = MDSWriter::MDSWriter
			NumberOfBuffers = 5000
        	CPUMask = 0x10
        	StackSize = 10000000
        	TreeName = "falcon_event"
        	StoreOnTrigger = 1
        	EventName = "updatejScope"
        	TimeRefresh = 5
        	NumberOfPreTriggers = 2
			NumberOfPostTriggers = 2
			Signals = {
				TRIGGER = {
					SignalType = uint8
				}
				TIME = {
					SignalType = uint64
					TimeSignal = 1
					TimeSignalMultiplier = 1e-9 
				}
        		START_HVPS = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.START_HVPS"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
				MODULATE = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.MODULATE"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }                
                RESET_HVPS = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.RESET_HVPS"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                EU_ARC = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.EU_ARC"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                RU_ARC = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.RU_ARC"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PLC_TRIP_1 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.PLC_TRIP_1"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PLC_TRIP_2 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.PLC_TRIP_2"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                START_TIME = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.START_TIME"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                CRITICAL_ERR = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.CRITICAL_ERR"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                ADMIN_MODE = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.ADMIN_MODE"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                MODE_LOSS = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.MODE_LOSS"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                STRAY_1 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.STRAY_1"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                STRAY_2 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.STRAY_2"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                RESET_FPGA = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "CRIO_IN.RESET_FPGA"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_EU_ARC = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.EU_ARC"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_RU_ARC = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.RU_ARC"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_PLC_TRIP_1 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.PLC_TRIP_1"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_PLC_TRIP_2 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.PLC_TRIP_2"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_MODE_LOSS = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.MODE_LOSS"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_STRAY_1 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.STRAY_1"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_STRAY_2 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.STRAY_2"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_L_EU_ARC = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.L_EU_ARC"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_L_RU_ARC = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.L_RU_ARC"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_L_PLC_TRIP_1 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.L_PLC_TRIP_1"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_L_PLC_TRIP_2 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.L_PLC_TRIP_2"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_L_MODE_LOSS = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.L_MODE_LOSS"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_L_STRAY_1 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.L_STRAY_1"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_L_STRAY_2 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.L_STRAY_2"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_B_EU_ARC = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.B_EU_ARC"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_B_RU_ARC = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.B_RU_ARC"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_B_PLC_TRIP_1 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.B_PLC_TRIP_1"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_B_PLC_TRIP_2 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.B_PLC_TRIP_2"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_B_MODE_LOSS = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.B_MODE_LOSS"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_B_STRAY_1 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.B_STRAY_1"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                PRE_PROC_OUT_B_STRAY_2 = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "PRE_PROC_OUT.B_STRAY_2"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                ADHOC_TRIP_OUT = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "ADHOC.TRIP_OUT"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                OUT_FLS = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "OUT.FLS"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                HVPS_OUT_TRIP_OUT = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "HVPS_OUT.TRIP_OUT"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                HVPS_OUT_ON_MPS = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "HVPS_OUT.ON_MPS"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                HVPS_OUT_ON_BPS = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "HVPS_OUT.ON_BPS"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                HVPS_STATE_OUT = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "HVPS_OUT.STATE_OUT"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                OUT_IF_TRIP_PLC = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "OUT_IF.TRIP_PLC"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                OUT_IF_TRIP_MPS = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "OUT_IF.TRIP_MPS"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                OUT_IF_TRIP_BPS = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "OUT_IF.TRIP_BPS"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                FLS_MANAGER_STATE_OUT = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "FLS_MANAGER.STATE_OUT"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                ERROR_CODE_VALUE = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "ERROR_CODE.VALUE"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }
                LOGIC_MODE_VALUE = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    NodeName = "LOGIC_MODE.VALUE"
        			MakeSegmentAfterNWrites = 4
                    Period = 25e-9
                }                
                DEBUG_PACKET_COUNTER = {
                    Type = uint8
                    AutomaticSegmentation = 0
                    MakeSegmentAfterNWrites = 1
        			MakeSegmentAfterNWrites = 4
                    NodeName = "DEBUG.PACKET_COUNT"
                    Period = 25e-9
                }
                DEBUG_SYNCH_BYTE = {
                    Type = uint8
                    AutomaticSegmentation = 0
        			MakeSegmentAfterNWrites = 4
                    NodeName = "DEBUG.SYNCH_BYTE"
                    Period = 25e-9
                }
                DEBUG_CRC = {
                    Type = uint16
                    AutomaticSegmentation = 0
        			MakeSegmentAfterNWrites = 4
                    NodeName = "DEBUG.CRC"
                    Period = 25e-9
                }
                MARTE_ERROR_CODE = {
                    Type = uint8
                    AutomaticSegmentation = 0
        			MakeSegmentAfterNWrites = 4
                    NodeName = "DEBUG.MARTE_CODE"
                    Period = 25e-9
                }
                ORIGINAL_PACKET = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 15
                    AutomaticSegmentation = 0
        			MakeSegmentAfterNWrites = 4
                    NodeName = "DEBUG.ORIGINAL"
                    Period = 25e-9
                }
        	}
        }
        +CRIOUART = {
            Class = CRIOUARTDataSource
            NumberOfBuffers = 500
            PortName = "/dev/ttyUSB0"
            BaudRate = 115200
            Timeout = 200000
            CPUMask = 0x40
            Signals = {
            	DataOK = {
            		Type = uint8
                    NumberOfElements = 1
            	}
                Packet = {
                    Type = uint8
                    NumberOfElements = 15
                }
            }
        }
        +SDNPub = {
            Class = SDN::SDNPublisher
            Topic = FalconFast
            //Interface = lo
            Interface = em2
            //Address = "10.136.20.20:44448"
            Signals = {
                TriggerSlow = {
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Time = {
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
            }
        }
		+LinkInputDataSource = {
			Class = LinkDataSource
			Link = AppSharedMemoryToFalconApp
			IsWriter = 0
			Signals = {
				PLCState = {
				    Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
				}
			}
		}
        +LinkOutputDataSource = {
			Class = LinkDataSource
			Link = AppSharedMemoryToPLCAPP
			IsWriter = 1
			Signals = {
				RTState = {
				    Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
				}
			}
		}
		+EPICSCAInput = {
			Class = EPICSCA::EPICSCAInput
			StackSize = 1048576 
			CPUs = 0x2
			Signals = {
				PulseDurationMilliSeconds = {
					Type = uint32
					PVName = TEST-AUX-CRIO:Pulse_Length_mSec_rNew
				}
				PulseDurationSeconds = {
					Type = uint32
					PVName = TEST-AUX-CRIO:Pulse_Length_Sec_rNew
				}
				PulseDurationMinutes = {
					Type = uint32
					PVName = TEST-AUX-CRIO:Pulse_Length_Min_rNew
				}
				SelectedGyrotron = {
                	Type = uint32
                	PVName = TEST-AUX-MAST:Ru_Eu_Gyro_Op_Rq
          		}
          		SelectedMode = {
                	Type = uint32
                	PVName = TEST-AUX-MAST:FC_Mode
          		}
			}
		}
    }
    +States = {
        Class = ReferenceContainer
        +Offpulse = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    Functions = {GAMIP GAMIPB GAMADC GAMDI GAMSDNPub GAMFilterDownsampling GAMTRMask GAMTC GAMESDNEMU GAMRTSM }
                }
                +Thread2 = {
                    Class = RealTimeThread
                    CPUs = 0x20
                    Functions = {GAMCRIORead}
                }
            }
        }
        +Ready = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    Functions = {GAMIP GAMIPB GAMADC GAMDI GAMSDNPub GAMFilterDownsampling GAMTRMask GAMTC GAMESDNEMU GAMRTSM } 
                }
                +Thread2 = {
                    Class = RealTimeThread
                    CPUs = 0x20
                    Functions = {GAMCRIORead}
                }
            }
        }
        +Online = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    Functions = {GAMIP GAMIPB GAMADC GAMDI GAMSDNPub GAMFilterDownsampling GAMTRMask GAMTC GAMESDNEMU GAMRTSM GAMMDS GAMMDSSlow } 
                }
                +Thread2 = {
                    Class = RealTimeThread
                    CPUs = 0x20
                    Functions = {GAMCRIORead GAMPacket}
                }
            }
        }
        +Fault = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    Functions = {GAMADC GAMDI}
                }
                +Thread2 = {
                    Class = RealTimeThread
                    CPUs = 0x20
                    Functions = {GAMCRIORead}
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
$PLCSDNApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer        
        +GAMPLCH = {
        	Class = ConstantGAM
        	OutputSignals = {
        		HeaderNF = {
                     Type = uint8
                     NumberOfElements = 1
                     Default = 1
                     DataSource = SDNPub
                }
                HeaderNI = {
                     Type = uint8
                     NumberOfElements = 1
                     Default = 1
                     DataSource = SDNPub
                }
                HeaderNC = {
                     Type = uint8
                     NumberOfElements = 1
                     Default = 6
                     DataSource = SDNPub
                }
                HeaderNS = {
                     Type = uint8
                     NumberOfElements = 1
                     Default = 2
                     DataSource = SDNPub
                }
                HeaderNA = {
                     Type = uint8
                     NumberOfElements = 1
                     Default = 1
                     DataSource = SDNPub
                }
        	}
        }
        +GAMSDNSub = {	
            Class = IOGAM
            InputSignals = {
                Header = {
                     Type = uint8
                     NumberOfElements = 48
                     DataSource = SDNSub
                     Frequency = 1
                }
                PLCHeader = {
                     Type = uint8
                     NumberOfElements = 8
                     DataSource = SDNSub
                }
                Floats = {
            		Type = float32
                	NumberOfElements = 1
					NumberOfDimensions = 1
					DataSource = SDNSub
            	}
				Integers = {
                	Type = uint16
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = SDNSub
                }
                CommandAbort = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = SDNSub
                }
                CommandLoad = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = SDNSub
                }
                CommandMakeReady = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = SDNSub
                }
                CommandPutManualPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = SDNSub
                }
                CommandStopPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = SDNSub
                }
                CommandSuspend = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = SDNSub
                }
                PLCState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = SDNSub
                }
                Alarms = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = SDNSub
                }
            }
            OutputSignals = {
            	PLCSDNHeader = {
                     Type = uint8
                     NumberOfElements = 48
                     DataSource = DDB1
                }
                PLCHeader = {
                     Type = uint8
                     NumberOfElements = 8
                     DataSource = DDB1
                }
                PLCFloats = {
            		Type = float32
                	NumberOfElements = 1
					NumberOfDimensions = 1
					DataSource = DDB1
            	}
				PLCIntegers = {
                	Type = uint16
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandAbort = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandLoad = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandMakeReady = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandPutManualPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandStopPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandSuspend = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                PLCState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                PLCAlarms = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
            }
        }
        +GAMIP = {
        	Class = IOGAM
        	InputSignals = {
        	     PLCState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
        	}
        	OutputSignals = {
        	     PLCState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LinkOutputDataSource
					Trigger = 1
                }
        	}
        }
        +GAMDebug = {
        	Class = IOGAM
        	InputSignals = {
                PLCIntegers = {
                	Type = uint16
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandAbort = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandLoad = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandMakeReady = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandPutManualPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandStopPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                CommandSuspend = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                PLCState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
                PLCAlarms = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = DDB1
                }
        	}
        	OutputSignals = {
                PLCIntegers = {
                	Type = uint16
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
                CommandAbort = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
                CommandLoad = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
                CommandMakeReady = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
                CommandPutManualPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
                CommandStopPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
                CommandSuspend = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
                PLCState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
                PLCAlarms = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
					DataSource = LoggerDataSource
                }
        	}
        }
        +GAMTOC = {
 			Class = TriggerOnChangeGAM
			+Events = {
				Class = ReferenceContainer
				+EventMakeReady = {
					Class = EventConditionTrigger
                    CPUMask = 0x2
					EventTrigger = {
						CommandMakeReady = 1
					}
					+Message1 = {
						Class = Message
						Destination = StateMachine
						Function = MAKEREADY
						Mode = ExpectsReply
					}
				}
                +EventGoOnline = {
					Class = EventConditionTrigger
                    CPUMask = 0x2
					EventTrigger = {
						CommandMakeReady = 2
					}
					+Message1 = {
						Class = Message
						Destination = StateMachine
						Function = GOONLINE
						Mode = ExpectsReply
					}
				}
                +EventMakeNormal = {
					Class = EventConditionTrigger
                    CPUMask = 0x2
					EventTrigger = {
						CommandMakeReady = 3
					}
					+Message1 = {
						Class = Message
						Destination = StateMachine
						Function = GOOFFPULSE
						Mode = ExpectsReply
					}
				}
				+EventAbort = {
					Class = EventConditionTrigger
                    CPUMask = 0x2
					EventTrigger = {
						CommandAbort = 165
					}
					+Message1 = {
						Class = Message
 						Destination = FalconApp.Functions.GAMRTSM
						Mode = ExpectsReply
						Function = Abort
 	               	}
	         	}
				+EventSuspend = {
					Class = EventConditionTrigger
                    CPUMask = 0x2
					EventTrigger = {
						CommandSuspend = 170
					}
					+Message1 = {
						Class = Message
 						Destination = FalconApp.Functions.GAMESDNEMU
						Mode = ExpectsReply
						Function = StopPower        				
 	               	}
					+Message2 = {
						Class = Message
 						Destination = FalconApp.Functions.GAMRTSM
						Mode = ExpectsReply
						Function = Suspend
 	               	}
	         	}
	         	+EventResume = {
					Class = EventConditionTrigger
                    CPUMask = 0x2
					EventTrigger = {
						CommandSuspend = 90
					}
					+Message1 = {
						Class = Message
 						Destination = FalconApp.Functions.GAMRTSM
						Mode = ExpectsReply
						Function = Resume
 	               	}
	         	}				
	         	+EventLoad = {
					Class = EventConditionTrigger
                    CPUMask = 0x2
					EventTrigger = {
						CommandLoad = 246
					}
					+Message1 = {
						Class = Message
 						Destination = FalconApp.Functions.GAMESDNEMU
						Mode = ExpectsReply
						Function = Load        				
 	               	}
	         	}	
	         	+EventPutManualPower = {
					Class = EventConditionTrigger
                    CPUMask = 0x2
					EventTrigger = {
						CommandPutManualPower = 180
					}
					+Message1 = {
						Class = Message
 						Destination = FalconApp.Functions.GAMESDNEMU
						Mode = ExpectsReply
						Function = PutManualPower        				
 	               	}
	         	}
	         	+EventStopPower = {
					Class = EventConditionTrigger
                    CPUMask = 0x2
					EventTrigger = {
						CommandStopPower = 196
					}
					+Message1 = {
						Class = Message
 						Destination = FalconApp.Functions.GAMESDNEMU
						Mode = ExpectsReply
						Function = StopPower        				
 	               	}
	         	}
 			} 
         	InputSignals = {
            	CommandAbort = {
                	DataSource = DDB1
					Type = uint8
					NumberOfElements = 1
				}
				CommandLoad = {
                	DataSource = DDB1
					Type = uint8
					NumberOfElements = 1
				}
				CommandMakeReady = {
                	DataSource = DDB1
					Type = uint8
					NumberOfElements = 1
				}
				CommandPutManualPower = {
					DataSource = DDB1
                	Type = uint8
					NumberOfElements = 1     					
                }
                CommandStopPower = {
                	DataSource = DDB1
                	Type = uint8
					NumberOfElements = 1     					
                }
                CommandSuspend = {
                	DataSource = DDB1
                	Type = uint8
					NumberOfElements = 1     					
                }
         	}
         	OutputSignals = {
            	CommandsAck = {
                	DataSource = DDB1
                	Type = uint8
                	NumberOfDimensions = 1
                	NumberOfElements = 6 //6 input commands
            	}
            	State = {
            		DataSource = DDB1
                	Type = uint32
                	NumberOfDimensions = 1
                	NumberOfElements = 6 //6 input commands
				}
			}
		}
		+GAMMARTeState = {
        	Class = ConstantGAM
        	OutputSignals = {
        		MARTeState = {
                     Type = uint8
                     NumberOfElements = 1
                     Default = 0
                     DataSource = DDB1
                }
			}
		}
		+GAMSDNPub = {	
            Class = IOGAM
            InputSignals = {     
                MARTeState = {
                     Type = uint8
                     NumberOfElements = 1
                     DataSource = DDB1
                }          
                RTState = {
                     Type = uint8
                     NumberOfElements = 1
                     DataSource = LinkInputDataSource
                }
                CommandsAck = {
                	Type = uint8
					NumberOfElements = 6 
					NumberOfDimensions = 1
					DataSource = DDB1
                } 
            }
            OutputSignals = {
                MARTeState = {
                     Type = uint8
                     NumberOfElements = 1
                     DataSource = SDNPub
                }  
                RTState = {
                     Type = uint8
                     NumberOfElements = 1
                     DataSource = SDNPub
                }
                AcknowledgmentAbort = {
                	Type = uint8
					NumberOfElements = 1
					NumberOfDimensions = 1
					DataSource = SDNPub
                }
                AcknowledgmentLoad = {
                	Type = uint8
					NumberOfElements = 1
					NumberOfDimensions = 1
					DataSource = SDNPub
                }
                AcknowledgmentMakeReady = {
                	Type = uint8
					NumberOfElements = 1
					NumberOfDimensions = 1
					DataSource = SDNPub
                }
                AcknowledgmentPutManualPower = {
                	Type = uint8
					NumberOfElements = 1
					NumberOfDimensions = 1
					DataSource = SDNPub
                }
                AcknowledgmentStopPower = {
                	Type = uint8
					NumberOfElements = 1
					NumberOfDimensions = 1
					DataSource = SDNPub
                }                
                AcknowledgmentSuspend = {
                	Type = uint8
					NumberOfElements = 1
					NumberOfDimensions = 1
					DataSource = SDNPub
                    Trigger = 1
                }
            }
        }        
	}
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
        	Class = GAMDataSource
       	}    
       	+SDNSub = {
            Class = SDN::SDNSubscriber
            Interface = p3p1
            //Interface = lo //DEBUG ONLY
            //Address = "127.0.0.1:2000" //DEBUG ONLY
            Address = "10.136.200.21:2000" //CHANGE ME
            Topic = Ignored
            //Timeout = 100
            Signals = {
            	Header = {
                     Type = uint8
                     NumberOfElements = 48
                }
                PLCHeader = {
                     Type = uint8
                     NumberOfElements = 8
                }
                Floats = {
            		Type = float32
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Integers = {
                	Type = uint16
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                CommandAbort = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                CommandLoad = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                CommandMakeReady = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                CommandPutManualPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                CommandStopPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                CommandSuspend = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                PLCState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                Alarms = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
            }
        }
        +SDNPub = {
            Class = SDN::SDNPublisher            
            Interface = p3p1
            //Interface = lo
            //Address = "127.0.0.1:2002" //DEBUG ONLY
            Address = "10.136.200.20:2000"
            Topic = AlsoIgnored
            Signals = {
            	Locked = 1           
                HeaderNF = {
                     Type = uint8
                     NumberOfElements = 1
                }
                HeaderNI = {
                     Type = uint8
                     NumberOfElements = 1
                }
                HeaderNC = {
                     Type = uint8
                     NumberOfElements = 1
                }
                HeaderNS = {
                     Type = uint8
                     NumberOfElements = 1
                }
                HeaderNA = {
                     Type = uint8
                     NumberOfElements = 1
                }
                HeaderS = {
                     Type = uint8
                     NumberOfElements = 3
                }
                Floats = {
            		Type = float32
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Integers = {
                	Type = uint16
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                AcknowledgmentAbort = {
                	Type = uint8
					NumberOfElements = 1    
					NumberOfDimensions = 1
                }
                AcknowledgmentLoad = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                AcknowledgmentMakeReady = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                AcknowledgmentPutManualPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                AcknowledgmentStopPower = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                AcknowledgmentSuspend = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                MARTeState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                RTState = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
                Alarms = {
                	Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }                
            }
        } 
        +LinkInputDataSource = {
			Class = LinkDataSource
			Link = AppSharedMemoryToPLCAPP
			IsWriter = 0
			Signals = {
				RTState = {
				    Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
				}
			}
		}
        +LinkOutputDataSource = {
			Class = LinkDataSource
			Link = AppSharedMemoryToFalconApp
			IsWriter = 1
			Signals = {
				PLCState = {
				    Type = uint8
					NumberOfElements = 1     
					NumberOfDimensions = 1
				}
			}
		}
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }        
    }
    +States = {
        Class = ReferenceContainer
        +Idle = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x2
                    Functions = {GAMSDNSub GAMIP GAMTOC GAMPLCH GAMMARTeState GAMSDNPub }
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
