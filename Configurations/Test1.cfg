+BaseLib2Wrapper = {
	Class = BaseLib2Wrapper
	BaseLib2Config = "
	+AdapterMessageHandler = {
    	Class = BaseLib2Adapter::AdapterMessageHandler
    }
	DefaultCPUs = 1
	+WEB = {
		Class = HttpGroupResource
		+BROWSE = {
			Title = \"Http Object Browser\"
        	Class = HttpGCRCBrowser
        	AddReference = {StateMachine OBJBROWSE THRBROWSE HTTPSignalServer MatlabSignalServer FlotPlot WebStatistic Collection}
    	}
    	+RGRAPH_LIB_DIR = {
        	Class   = HttpDirectoryResource
        	BaseDir = \"/home/aneto/Projects/EFDA-MARTe/trunk/3rdPartyLibs/RGraph/libraries\"
    	}
    	+PLOTTING_GAM_DIR = {
        	Class   = HttpDirectoryResource
        	BaseDir = \"/home/aneto/Projects/EFDA-MARTe/trunk/GAMs/PlottingGAM\"
    	}
    	+FLOT_DIR = {
        	Class   = HttpDirectoryResource
        	BaseDir = \"/home/aneto/Projects/EFDA-MARTe/trunk/3rdPartyLibs/flot\"
    	}
	}
	+HTTPSERVER = {
    	Class = HttpService
    	Port = 8084
    	HttpRelayURL = \"ignore.me:1234\"
    	VerboseLevel = 10
    	Root = WEB
	}
	+OBJBROWSE = {
    	Class = HttpClassListResource
	}
	+THRBROWSE = {
    	Class = HttpThreadListResource
	}
	+MatlabSignalServer = {
    	Class = MATLABHandler
	}
	+FlotPlot={
		Class = FlotPlot
	}
	+HTTPSignalServer={
    	Class = SignalServer
	}
	+StateMachine = {
		Class = StateMachine
		VerboseLevel = 10
		+INITIAL = {
			Class = StateMachineState
			StateCode = 0x0
			+START = {
            	Class = StateMachineEvent
            	NextState = IDLE
            	Value = START
            	+STARTALL = {
                	Class = MessageDeliveryRequest
                	Sender = StateMachine
                	Destinations = \"HTTPSERVER\"
                	MsecTimeOut = 1000
                	Flags = NoReply
                	Message = {
                    	Class = Message
                    	Content = START
                	}
            	}            	           
        	}
		}
		+IDLE = {
			Class = StateMachineState
			StateCode = 0x1
			+RUN = {
            	Class = StateMachineEvent
            	NextState = RUN
            	Value = RUN
            	+UPDATE_MSS = {
                	Class = MessageEnvelope
                	Destination = MatlabSignalServer
                	+MESSAGE = {
                    	Class = Message
                    	Content = AUTODETECT
                	}
            	}
            	+UPDATE_SS = {
                	Class = MessageEnvelope
                	Destination = HTTPSignalServer
                	+MESSAGE = {
                    	Class = Message
                    	Content = AUTODETECT
                	}
            	}
            	+UPDATE_FLOT = {
                	Class = MessageEnvelope
                	Destination = FlotPlot
                	+MESSAGE = {
                    	Class = Message
                    	Content = AUTODETECT
                	}
            	}
            	+GO_TO_STATE_RUN_MARTe2 = {
            		Class = MessageEnvelope
                	Destination = AdapterMessageHandler
                	+MESSAGE = {
                    	Class = Message
                    	Content = StateMachine::RUN
                	}
            	}
            }
		}        
		+RUN = {
			Class = StateMachineState
			StateCode = 0x2
			+STOP = {
            	Class = StateMachineEvent
            	NextState = IDLE
            	Value = IDLE            
            	+GO_TO_STATE_IDLE_MARTe2 = {
            		Class = MessageEnvelope
                	Destination = AdapterMessageHandler
                	+MESSAGE = {
                   		Class = Message
                   		Content = StateMachine::STOP
                	}
            	}
            }
		}
    }"	
}
+StateMachine = {
	Class = StateMachine
	+INITIAL = {
    	Class = ReferenceContainer    	
    	+START = {
    		Class = StateMachineEvent
    		NextState = "IDLE"
			NextStateError = "IDLE"
    		Timeout = 0
    		+StartBaseLib2 = {
				Class = Message
 				Destination = "BaseLib2Wrapper"
    			Function = "StateMachine::START"
			}
			+ChangeToState1Msg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = State1
        		}
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
    	}    	
	}
	+IDLE = {
    	Class = ReferenceContainer
    	+RUN = {
    		Class = StateMachineEvent
    		NextState = "RUNNING"
    		NextStateError = "IDLE"
            Timeout = 0            
            +PrepareChangeToState2Msg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = State2
        		}
        	}
        	+StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
        }
    }
    +RUNNING = {
    	Class = ReferenceContainer
    	+STOP = {
    		Class = StateMachineEvent
    		NextState = "IDLE"
    		NextStateError = "IDLE"
            Timeout = 0            
            +PrepareChangeToState1Msg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = State1
        		}
        	}
        	+StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
        }
	}
}
$FalconApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMWF1 = {
        	Class = WaveformTestGAM
        	WaveformType = Sine
        	Frequency = 10000
        	Amplitude = 1
        	TimeWindows = {
        		T1 = {
        			StartTime = 0.0
        			EndTime = 1000.0
        		}
        	}
        	InputSignals = {
        		Time = {
                    DataSource = NI6368_0
                    Type = uint32
                }
			}
			OutputSignals = {
				WaveformSine = {
					DataSource = NI6368_DAC_0
					Alias = DAC0_0
                    Type = float32
                    Trigger = 1
                    NumberOfElements = 2000
				}
			}
        }
        +GAMADC = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = NI6368_0
                    Type = uint32
                }
                Time = {
                    DataSource = NI6368_0
                    Type = uint32
                }
                ADC0_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
                    Frequency = 1000
                }
                ADC1_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC2_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC3_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC4_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC5_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC6_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC7_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC8_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC9_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC10_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC11_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC12_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC13_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC14_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC15_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}				
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
                Time = {
                    DataSource = DDB1
                    Type = uint32                   
                }
                ADC0_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000     
					NumberOfDimensions = 1       	
                }  
                ADC1_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1            	
                }
                ADC2_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC3_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC4_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC5_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC6_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC7_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC8_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC9_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC10_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC11_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC12_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC13_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC14_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC15_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}				
            }
        }
        /*+GAME = {
            Class = IOGAM
            InputSignals = {
                PORT_0 = {
                    DataSource = NI6368_DIO_0
                    Type = uint32
                }
            }
            OutputSignals = {
                PORT_0 = {
                    DataSource = DDB1
                    Type = uint32
                }                
            }
		}*/		
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
        	Class = GAMDataSource
       	}        
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +NI6368_0 = {
            Class = NI6368::NI6368ADC
            DeviceName = "/dev/pxie-6368"
            BoardId = 0
			DMABufferSize = 1000
            ClockSampleSource = "INTERNALTIMING"
            ClockSamplePolarity = "ACTIVE_HIGH_OR_RISING_EDGE"
            ClockConvertSource = "INTERNALTIMING"
			ClockConvertPolarity = "ACTIVE_HIGH_OR_RISING_EDGE"
			ScanIntervalCounterSource = "COUNTER_TB3"
			ScanIntervalCounterPolarity = "RISING_EDGE"
			ScanIntervalCounterPeriod = 50
			ScanIntervalCounterDelay = 2 
			CPUs = 0x4
            Signals = {
            	Counter = {
            		Type = uint32
            	}
                Time = {
                	Type = uint32
            	}
            	ADC0_0 = {
            		InputRange = 2
            		Type = int16
            		ChannelId = 0
            	}
            	ADC1_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 1          
            	}
            	ADC2_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 2          
            	}
            	ADC3_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 3          
            	}
            	ADC4_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 4          
            	}
            	ADC5_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 5          
            	}
            	ADC6_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 6          
            	}
            	ADC7_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 7          
            	}
            	ADC8_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 8          
            	}
            	ADC9_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 9          
            	}
            	ADC10_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 10          
            	}
            	ADC11_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 11          
            	}
            	ADC12_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 12     
            	}
            	ADC13_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 13          
            	}
            	ADC14_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 14         
            	}
            	ADC15_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 15          
            	}            	  
            }
        }
        +NI6368_DAC_0 = {
            Class = NI6368::NI6368DAC
            DeviceName = "/dev/pxie-6368"
            BoardId = 0
            StartTriggerSource = "SW_PULSE"
        	StartTriggerPolarity = "RISING_EDGE"
        	UpdateCounterSource = "UI_TC"
        	UpdateCounterPolarity = "RISING_EDGE"
       		UpdateIntervalCounterSource = "TB3"
        	UpdateIntervalCounterPolarity = "RISING_EDGE"
        	UpdateIntervalCounterPeriodDivisor = 100000
        	UpdateIntervalCounterDelay = 2
            Signals = {
            	DAC0_0 = {
            		OutputRange = 10
            		Type = float32
            		ChannelId = 0            	
            	}            	  	
            }
        }
        +NI6368_DIO_0 = {
        	Class = NI6368::NI6368DIO
        	DeviceName = "/dev/pxie-6368"
        	BoardId = 0
        	InputPortMask = 0x2
        	OutputPortMask = 0x1
        	ClockSampleSource = "INTERNAL"
        	ClockSamplePolarity = "ACTIVE_HIGH_OR_RISING_EDGE"
        	ScanIntervalCounterSource = "COUNTER_TB3"
        	ScanIntervalCounterPeriod = 50
        	ScanIntervalCounterDelay = 2
        	StartTriggerSource = "SW_PULSE"
        	UpdateCounterSource = "UI_TC"
        	UpdateCounterPolarity = "RISING_EDGE"
        	UpdateIntervalCounterSource = "TB3"
        	UpdateIntervalCounterPolarity = "RISING_EDGE"
        	UpdateIntervalCounterPeriodDivisor = 100000
			UpdateIntervalCounterDelay = 2
        	Signals = {
        		PORT_0 = {
        			Type = uint32
        		}
        	}
        }
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x8
                    Functions = {GAMWF1 GAMADC}
                }
            }
        }
        +State2 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x8
                    Functions = {GAMWF1 GAMADC}
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
